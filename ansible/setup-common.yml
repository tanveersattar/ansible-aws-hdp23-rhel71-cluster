---
#-------------------------------------------------------------------------------------------------------
# Description: 
#    Setup and configures the following on all AWS instances of HDP cluster:
#      - SSH keys
#      - Hostnames
#      - Stop IP Tables
#      - Disable SELinux 
#      - Install NTP, Networking, Unzip, Wget 
#      - Remove latest version of Snappy and install compatible version from HDP repo
#      - Install Oracle JDK and set alternatives
#      - Setup Ambari YUM repository and install Amabari Agent
# 
# Note:  
#   HDP 2.3 Data Node installation requires snappy package version 1.0.5-1.el6 while RHEL 7.1 used for this 
#   cluster setup has later version 1.1.0-3.el7. This causes Data Node installation failure during cluster 
#   setup via Ambari. Workaround is to remove 1.1 version of snappy, configure HDP 2.3 YUM repo and install 
#   snappy-devel package (as HDP 2.3 repo is setup with higher priority, snappy-devel gets installed from
#   that repo rather than from default RHEL repo). Running post-setup playbook removes this repo (because
#   setup via Ambari configures HDP repos on its own, thereby duplicating HDP-UTILS repo in YUM config).
#   https://issues.apache.org/jira/browse/AMBARI-11990
#   http://hortonworks.com/community/forums/topic/error-when-installing-data-node/
#    
#-------------------------------------------------------------------------------------------------------

- hosts: all
  connection: local
  gather_facts: False

  tasks:
  - name: Wait for SSH to be available on Inventory Hosts
    local_action: wait_for host={{ inventory_hostname }} port=22

    
- hosts: all
  user: ec2-user
  sudo: True
  gather_facts: False
  vars_files:
  - "../config/variables.yml"
  vars:
    _local_inventory_dir: "~/.ansible/local_inventory/{{ hdp_cluster_id }}"
  
  tasks:

#
# Setup SSH access
#
  - name: Copying PEM File to Instance
    copy: src="~/{{ aws_keypair_name }}.pem" dest="/home/ec2-user/{{ aws_keypair_name }}.pem" owner=ec2-user mode=0400
    
  - name: Adding SSH Identity
    lineinfile: dest=/etc/ssh/ssh_config insertafter=EOF line="Host *\n\tIdentityFile /home/ec2-user/{{ aws_keypair_name }}.pem"
 
#
# Setup hostnames
# 
  - name: Copying hosts file to instance
    copy: src="{{ _local_inventory_dir }}/hdp.hosts" dest=/etc/hosts  

  - name: Create hostname in /etc/hostname
    lineinfile: dest=/etc/hostname state=present create=yes regexp='.*' line="{{ internalhostname }}"

  - name: Set hostname in /etc/sysconfig/network
    lineinfile: dest=/etc/sysconfig/network create=yes state=present regexp='HOSTNAME=.*' line="HOSTNAME={{ internalhostname }}"

  - name: Set hostname
    shell: hostname {{ internalhostname }}  
    
#
# Stop IP Tables
#
  - name: Stop iptables
    service: name=iptables state=stopped

  - name: Stop iptables6
    service: name=ip6tables state=stopped

#
# Disable SELinux
#    
  - name: Disabling SELinux
    lineinfile: dest=/etc/sysconfig/selinux regexp=^SELINUX= line=SELINUX=disabled

  - name: Disable SElinux permanently
    lineinfile: dest=/etc/selinux/config state=present create=no regexp='SELINUX=.*' line='SELINUX=disabled'

#
# Install packages NTP, unzip and wget
#
  - name: Install NTP
    yum: name=ntp state=present
  
  - name: Start NTP
    service: name=ntpd state=restarted

  - name: Start NTP at boot time
    shell: chkconfig ntpd on
    
  - name: Set networking yes
    lineinfile: dest=/etc/sysconfig/network create=yes state=present regexp='NETWORKING=.*' line='NETWORKING=yes'

  - name: Install unzip
    yum: name=unzip state=present

  - name: Install wget
    yum: name=wget state=present  

#
# Remove current version of snappy, configure HDP repo and install snappy-devel from there [Ambari Issue - AMBARI-11990]
#
  - name: Remove snappy 
    yum: name=snappy state=absent 

  - name: Create remote HDP repository
    get_url: url={{ hdp_repo }} dest=/etc/yum.repos.d/hdp.repo

  - name: Install snappy-devel 
    yum: name=snappy-devel state=present  

#
# Install Oracle JDK
#
  - name: Download Oracle JDK
    shell: "wget --no-cookies --no-check-certificate --header 'Cookie: oraclelicense=accept-securebackup-cookie' '{{ hdp_oracle_jdk_download_url }}' -O /opt/{{ hdp_oracle_jdk_ver }}.rpm"

  - name: Install Oracle JDK
    shell: rpm -Uvh --force /opt/{{ hdp_oracle_jdk_ver }}.rpm
 
  - name: Write out alternatives file
    template: src=../templates/java_alternatives.j2 dest=/tmp/java_alternatives.sh
 
  - name: Setting alternatives
    shell: sh /tmp/java_alternatives.sh
  
  - name: Remove previous links for jps
    shell: rm -f /usr/bin/jps  
  
  - name: Set jps in path
    shell: ln -s `sudo find / -name jps | grep jdk` /usr/bin/jps  

#
# Download/Install Ambari Repo and Agent    
#    
  - name: Create Ambari Repo
    get_url: url={{ hdp_ambari_repo }} dest=/etc/yum.repos.d/ambari.repo
    
  - name: Install Ambari agent
    yum: name=ambari-agent state=present

  - name: Set Ambari server hostname in /etc/ambari-agent/conf/ambari-agent.ini 
    lineinfile: dest=/etc/ambari-agent/conf/ambari-agent.ini regexp=^hostname= line=hostname={{ ambarihost }}
    
  - name: Start Ambari agent
    service: name=ambari-agent state=restarted  
